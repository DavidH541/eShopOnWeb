name: eShopOnWeb Build and Test

on: [push, workflow_dispatch]

env:
  RESOURCE-GROUP: rg-az400-eshoponweb-NAME
  LOCATION: westeurope
  TEMPLATE-FILE: .azure/bicep/webapp.bicep
  SUBSCRIPTION-ID: YOUR-SUBS-ID
  WEBAPP-NAME: az400-webapp-NAME


jobs:
  buildandtest:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '7.0.x'
        include-prerelease: true
    - name: Build with dotnet
      run: dotnet build ./eShopOnWeb.sln --configuration Release
    - name: Test with dotnet
      run: dotnet test ./eShopOnWeb.sln --configuration Release
    - name: dotnet publish
      run: dotnet publish ./src/Web/Web.csproj -c Release -o ${{env.DOTNET_ROOT}}/myapp
    - name: Upload artifact for deployment job
      uses: actions/upload-artifact@v3
      with:
        name: .net-app
        path: ${{env.DOTNET_ROOT}}/myapp
    - name: Upload artifact for deployment job
      uses: actions/upload-artifact@v3
      with:
        name: bicep-template
        path: ${{ env.TEMPLATE-FILE }}
        
  deploy:
    runs-on: ubuntu-latest
    needs: buildandtest
    environment:
      name: 'Development'
    steps:
    - name: Download artifact from build job
      uses: actions/download-artifact@v3
      with:
        name: .net-app
        path: .net-app
    - name: Download artifact from build job
      uses: actions/download-artifact@v3
      with:
        name: bicep-template
        path: bicep-template
    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    - name: deploy
      uses: azure/arm-deploy@v1
      with:
        subscriptionId: ${{ env.SUBSCRIPTION-ID }}
        resourceGroupName: ${{ env.RESOURCE-GROUP }}
        template: bicep-template/webapp.bicep
        parameters: 'webAppName=${{ env.WEBAPP-NAME }} location=${{ env.LOCATION }}'
        failOnStdErr: false   
    - name: Publish Website to WebApp
      uses: Azure/webapps-deploy@v2
      with:
        app-name: ${{ env.WEBAPP-NAME  }}
        package: .net-app
   
